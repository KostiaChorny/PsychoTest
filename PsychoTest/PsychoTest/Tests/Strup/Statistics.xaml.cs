using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace PsychoTest.Tests.Strup
{
    /// <summary>
    /// Interaction logic for Statistics.xaml
    /// </summary>
    public partial class Statistics : Window
    {
        public Statistics()
        {
            InitializeComponent();

            UpdateGrid();
        }

        private void UpdateGrid()
        {
            using (var context = new Model.DB())
            {
                var querry = from r in context.StrupTestResults
                             join p in context.StrupPartResults
                             on r.ResultId equals p.TestResult.ResultId
                             select new
                             {
                                 ResultId = r.ResultId,
                                 PartId = p.PartResultId,
                                 Name = r.Name,
                                 Date = r.Date,
                                 Part = p.Part,
                                 QuestionCount = p.QuestionsCount,
                                 ErrorsCount = p.ErrorsCount,
                                 Time = p.Time
                             };
                dataGrid.ItemsSource = querry.ToList();
                dataGrid.ColumnWidth = DataGridLength.Auto;


            }
        }

        private void dataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid.Columns[0].Visibility = Visibility.Hidden;
            dataGrid.Columns[1].Visibility = Visibility.Hidden;
            dataGrid.Columns[2].Header = "Ім'я";
            dataGrid.Columns[3].Header = "Дата і час";
            dataGrid.Columns[4].Header = "Номер тесту";
            dataGrid.Columns[5].Header = "Кількість запитань";
            dataGrid.Columns[6].Header = "Кількість помилок";
            dataGrid.Columns[7].Header = "Витрачений час";
        }

        private void deleteButton_Click(object sender, RoutedEventArgs e)
        {
            using (var context = new Model.DB())
            {
                var resultId = (int)((dynamic)dataGrid.SelectedItems[0]).ResultId;
                var partId = (int)((dynamic)dataGrid.SelectedItems[0]).PartId;
                var result = context.StrupPartResults.First(p => p.PartResultId == partId && p.TestResult.ResultId == resultId);
                context.StrupPartResults.Remove(result);

                var deleteTests = new List<StrupResult>();
                foreach (var r in context.StrupTestResults)
                {
                    if (r.Parts.Count == 0)
                    {
                        deleteTests.Add(r);
                    }
                }
                if (deleteTests.Count != 0)
                {
                    context.StrupTestResults.RemoveRange(deleteTests);
                }
                context.SaveChanges();
            }

            UpdateGrid();
        }

        private void importButton_Click(object sender, RoutedEventArgs e)
        {
            var app = new Microsoft.Office.Interop.Excel.Application();
            var workbook = app.Workbooks.Add();
            var worksheet = workbook.Worksheets[1];
            worksheet.Cells[1, 1] = "Ім'я";
            worksheet.Cells[1, 2] = "Дата і час";
            worksheet.Cells[1, 3] = "Номер тесту";
            worksheet.Cells[1, 4] = "Кількість запитань";
            worksheet.Cells[1, 5] = "Кількість помилок";
            worksheet.Cells[1, 6] = "Витрачений час";

            using (var context = new Model.DB())
            {
                var results = (from r in context.StrupTestResults
                             join p in context.StrupPartResults
                             on r.ResultId equals p.TestResult.ResultId
                             select new
                             {
                                 Name = r.Name,
                                 Date = r.Date,
                                 Part = p.Part,
                                 QuestionCount = p.QuestionsCount,
                                 ErrorsCount = p.ErrorsCount,
                                 Time = p.Time
                             }).ToList();

                for (int i = 0; i < results.Count(); i++)
                {
                    worksheet.Cells[i + 2, 1] = results[i].Name;
                    worksheet.Cells[i + 2, 2] = results[i].Date;
                    worksheet.Cells[i + 2, 3] = results[i].Part;
                    worksheet.Cells[i + 2, 4] = results[i].QuestionCount;
                    worksheet.Cells[i + 2, 5] = results[i].ErrorsCount;
                    worksheet.Cells[i + 2, 6] = results[i].Time;
                }
            }

            app.Visible = true;
        }
    }
}
